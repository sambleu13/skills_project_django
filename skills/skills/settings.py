"""
Se configura todo lo que se va ahciendo para ejecutar el proyecto de una forma exitosa, 
la base dir es una constante que indica la posicion del directorio raiz, se construye 
a partir del archivo que se ejecuta, primero toma settings y sube dos carpetas, necesitamos
darle rutas enteras de los archivos que vamos necesitando.

secret key es una cadena de caracteres que se utiliza para cuestiones de seguridad,
en especial para contraseñas. podemos utilizar el de django o generar aleatorio
se recomienda en .env o en variables de ntorno.

cuando esta en debug = true, es decir estas en desarrollo y muestra errores
se recomienda tenerla en variable de entorno

allowed_hosts se utiliza cuando esta en produccion y se pone '*' cuando esta en desarrollo
 para permitir peticiones de cualquier hosts

installed apps tiene todas las apps instaladas, tanto las de django, third-parties y 
las generadas por nosotras mismas por el proyecto

middleware son procesos intermedios entre que se hace la petición y se llega a la vista
a la que squiere hacer la petición, procesos de seguridad, sesion y de autenticación. 
los de django ya definidos son en su mayoria de seguridad
oat es de autenticación
middleware propio como reto: tomar peticiones para hacer un track de cuantas veces se entra 
a ciertas vistas

templates es de html, porque django esta pensando como fullstack
rest_framework se encarga del backend

wsgi es la variable para indicar donde se encuentra wsgi

bases de datos, por default tiene db.sqlite3, solo es para identificar el manejador y el nombre
y la ruta, veremos como cambiar a otra base de datos
para postgres hay que cambiar engine, name, y agregar usuario, contraseña, host y puerto default o
uno definido

el validador de passwords se encarga de que las contraseñas sigan las reglas y estándares
para que sean seguras



Django settings for skills project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4j-yrbahf*ho2(@xc4y%p0g=%ueo#%@#^9juve$)(1-j@bl3md'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'app1',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'skills.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'skills.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'restaurante_hackademy',
        'USER': '',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '5432'
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'
#America/Mexico_City
#https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
#para el front-end y es donde se generan los archivos los css y js
#media url es para guardar imagenes de la parte front
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
#indica a los modelos que las tablas generedas en las bases de datos van a ser
#big int para que no genere problemas por su tamaño

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
